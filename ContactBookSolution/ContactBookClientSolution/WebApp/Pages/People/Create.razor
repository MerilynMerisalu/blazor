@page "/people/create"
@using Application.Domain.EF
@using Application.Service
@inject PersonService service
@inject ISnackbar bar
@inject NavigationManager nav
@using Application.Domain

@using WebApp.Validators
@using WebApp.ViewModels
@using Blazored.FluentValidation


<h1>Create Person</h1>


<EditForm Model="vm" OnValidSubmit="Submit">
    <FluentValidationValidator Validator="validations" />
    <ValidationSummary style="color:red"></ValidationSummary>
    <MudTextField @bind-Value="vm.FirstName" T="string" For="() => vm.FirstName" Label="First Name" />
    <MudTextField @bind-Value="vm.LastName" T="string" For="() => vm.LastName" Label="Last Name" />
    <br />
    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Create" Color="Color.Primary">Create</MudButton>
</EditForm>



@code {
     CreateEditPersonViewModel vm = new CreateEditPersonViewModel();
     PersonValidator validations = new PersonValidator();

    public async void Submit()
    {
        var person = new Person();
        person.FirstName = vm.FirstName;
        person.LastName = vm.LastName;

        person = await service.CreatePerson(person);
        bar.Add("Person Added", MudBlazor.Severity.Success);
        nav.NavigateTo("/people");
     }
}
