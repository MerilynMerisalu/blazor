@page "/todo"
@rendermode InteractiveServer
<h3>Todo(@TodoItems.Count) </h3>

 @if (TodoItems.Count == 0)
{
    <p style="color:red">There are no items in the list.</p>
}


<ul>
    @foreach (var todo in TodoItems)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone" />
            <input type="text" @bind="todo.Title" />
            <button @onclick="@(e => Delete(e, todo.Id))" class="btn btn-danger">Delete</button>
        </li>
        
    }
</ul>
<input @bind="newTodo" />
<div>
    @if(TodoItems.Count(t => !t.IsDone) == 1)
    {
        <p>There is @TodoItems.Count(t => !t.IsDone) todo undone! </p>
    }
    else
    {
     <p>There are @TodoItems.Count(t => !t.IsDone) todos undone! </p>
    }
</div>
<button class="btn btn-primary" @onclick="AddTodo">Add Todo</button>
 
@code {
    List<TodoItem> TodoItems = new List<TodoItem>();
    string newTodo = string.Empty;

    public class TodoItem
    {
        public int Id { get; set; }
        public string Title { get; set; } = default!;
        public bool IsDone { get; set; }

    }
    private void AddTodo(MouseEventArgs e)
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            TodoItems.Add(new TodoItem()
            {
                Id = Random.Shared.Next(),
                Title = newTodo
            });
            newTodo = string.Empty;
        }
    }
    private void Delete(MouseEventArgs e, int id)
    {
        TodoItem todo = TodoItems.Find(t => t.Id == id)!;
        TodoItems.Remove(todo);
    }
}
